{"version":3,"sources":["components/PostsList/PostsList.tsx","api/api.ts","api/posts.ts","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["PostsList","props","posts","openPost","setOpenPost","className","map","post","userId","title","id","type","onClick","BASE_URL","getPosts","fetch","then","response","json","getPostDetails","postId","getComments","addComment","name","email","body","method","headers","JSON","stringify","NewCommentForm","updateComments","useState","currentName","setCurrentName","currentEmail","setCurrentEmail","currentText","setCurrentText","handleAddComment","a","onSubmit","event","preventDefault","placeholder","value","onChange","target","PostDetails","createdAt","updatedAt","postDetails","setPostDetails","comments","setComments","prevPostId","setPrevPostId","hidden","setHidden","currentPostDetails","currentComments","currentPostId","useEffect","handleRemoveComment","comment","commentId","length","App","setPosts","selectedPostId","setSelectedPostId","setUserId","prevUserId","setPrevUserId","getAllPosts","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.043f4a60.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\n\ntype Props = {\n  posts: Post[];\n  openPost: number;\n  setOpenPost: (value: number) => void\n};\n\nexport const PostsList: React.FC<Props> = (props) => {\n  const { posts, openPost, setOpenPost } = props;\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.title}\n            </div>\n            {openPost !== post.id\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => setOpenPost(post.id)}\n                >\n                  Open\n                </button>\n              )\n              : (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => setOpenPost(0)}\n                >\n                  Close\n                </button>\n              )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export const BASE_URL = 'https://mate.academy/students-api';\n","import { BASE_URL } from './api';\n\nexport const getPosts = (userId: number) => {\n  if (userId !== 0) {\n    return fetch(`${BASE_URL}/posts?userId=${userId}`)\n      .then(response => response.json());\n  }\n\n  return fetch(`${BASE_URL}/posts`)\n    .then(response => response.json());\n};\n\nexport const getPostDetails = (postId: number) => {\n  return fetch(`${BASE_URL}/posts/${postId}`)\n    .then(response => response.json());\n};\n","import { BASE_URL } from './api';\n\nexport const getComments = (postId: number) => {\n  return fetch(`${BASE_URL}/comments?postId=${postId}`)\n    .then(response => response.json());\n};\n\nexport const deleteComment = (commentId: number) => {\n  return fetch(`${BASE_URL}/comments/${commentId}`, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n};\n\nexport const addComment = (postId: number, name: string, email: string, body: string) => {\n  return fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  });\n};\n","import React, { useState } from 'react';\nimport { addComment } from '../../api/comments';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  postId: number\n  updateComments: (currentPostId: number) => Promise<void>\n};\n\nexport const NewCommentForm: React.FC<Props> = (props) => {\n  const { postId, updateComments } = props;\n  const [currentName, setCurrentName] = useState('');\n  const [currentEmail, setCurrentEmail] = useState('');\n  const [currentText, setCurrentText] = useState('');\n  const handleAddComment = async () => {\n    await addComment(postId, currentName, currentEmail, currentText);\n    updateComments(postId);\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={async (event) => {\n        event.preventDefault();\n        await handleAddComment();\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={currentName}\n          onChange={(event) => setCurrentName(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={currentEmail}\n          onChange={(event) => setCurrentEmail(event.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={currentText}\n          onChange={(event) => setCurrentText(event.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPostDetails } from '../../api/posts';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { getComments, deleteComment } from '../../api/comments';\nimport './PostDetails.scss';\n\ntype Props = {\n  postId: number\n};\n\nexport const PostDetails: React.FC<Props> = (props) => {\n  const { postId } = props;\n  const [postDetails, setPostDetails] = useState<Post>({\n    id: 0,\n    createdAt: '',\n    updatedAt: '',\n    userId: 0,\n    title: '',\n    body: '',\n  });\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [prevPostId, setPrevPostId] = useState(postId);\n  const [hidden, setHidden] = useState(false);\n  const currentPostDetails = async () => {\n    setPostDetails(await getPostDetails(postId));\n  };\n\n  const currentComments = async (currentPostId: number) => {\n    setComments(await getComments(currentPostId));\n  };\n\n  useEffect(() => {\n    if (prevPostId !== postId) {\n      setPrevPostId(postId);\n      currentPostDetails();\n      currentComments(postId);\n    }\n  });\n\n  const handleRemoveComment = async (comment: Comment) => {\n    await deleteComment(comment.id);\n    currentComments(postId);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      {!!postId && (\n        <>\n          <section className=\"PostDetails__post\">\n            <p>{postDetails.title}</p>\n          </section>\n\n          <section className=\"PostDetails__comments\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => setHidden(!hidden)}\n            >\n              {!hidden ? `Hide ${comments.length} comments`\n                : `Show ${comments.length} comments`}\n            </button>\n\n            {!hidden && (\n              <ul className=\"PostDetails__list\">\n                {comments.map(comment => (\n                  <li className=\"PostDetails__list-item\" key={comment.id}>\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => handleRemoveComment(comment)}\n                    >\n                      X\n                    </button>\n                    <p>{comment.name}</p>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </section>\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm\n                postId={postId}\n                updateComments={currentComments}\n              />\n            </div>\n          </section>\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getPosts } from './api/posts';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n  const [userId, setUserId] = useState(0);\n  const [prevUserId, setPrevUserId] = useState(0);\n\n  const changeOpenPost = (value: number) => {\n    setSelectedPostId(value);\n  };\n\n  const getAllPosts = async () => {\n    setPosts(await getPosts(userId));\n  };\n\n  useEffect(() => {\n    getAllPosts();\n  }, []);\n\n  useEffect(() => {\n    if (userId !== prevUserId) {\n      getAllPosts();\n      setPrevUserId(userId);\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"user-selector\">\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            id=\"user-selector\"\n            value={userId}\n            onChange={(event) => {\n              setUserId(+event.target.value);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            openPost={selectedPostId}\n            setOpenPost={changeOpenPost}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            postId={selectedPostId}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}